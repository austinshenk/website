@mixin pixelated-border($floating: false, $interactive: false, $state: "normal") {
  $color: var(--pixel);
  $shadow: var(--shadow);

  $border: #{0} -$pixel $color, $pixel #{0} $color, #{0} $pixel $color, -$pixel #{0} $color;
  @if ($floating and not $interactive) or ($floating and $interactive and $state == "normal") {
    $border: $border + "," + ( 0 (2 * $pixel) $shadow, $pixel $pixel $shadow, -$pixel $pixel $shadow);
  }

  box-shadow: #{$border};
}

@mixin container($floating: false) {
  @include pixelated-border($floating);
  background-color: var(--background);
}

@mixin interactive($floating: false) {
  @include pixelated-border($floating, true, "normal");
  background-color: var(--background-main);
  transition: transform .1s ease-in-out, box-shadow .1s ease-in-out, background .3s ease-in-out, color .3s ease-in-out, text-shadow .3s ease-in-out;

  &:hover, &:focus, &:focus-within {
    background-color: hsl(0, 0%, 50%);
    color: hsl(0, 0%, 100%);
    outline: none;

    & [am-icon][am-icon-style=outline] path {
      stroke: hsl(0, 0%, 100%);
    }

    & [am-icon][am-icon-style=fill] path {
      fill: hsl(0, 0%, 100%);
    }

    & [am-icon][am-icon-style=outline-fill] path {
      fill: hsl(0, 0%, 100%);
      stroke: hsl(0, 0%, 100%);
    }
  }

  &:not([disabled=""]), &:not([disabled=true]) {
    &:active {
      @include pixelated-border($floating, true, "active");
      transform: translate(0, 2px);
    }
  }
}