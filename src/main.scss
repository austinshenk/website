$pixel: 4px;

:root {
    --pixel: hsl(0, 0%, 0%);
    --shadow: hsl(0, 0%, 70%);
    --background: hsl(0, 0%, 100%);
    --background-alt: hsl(0, 0%, 95%);
    --text: hsl(0, 0%, 0%);
    --text-invert: hsl(0, 0%, 100%);
    --selection-background: hsl(0, 0%, 20%);
    --selection-text: hsl(0, 0%, 100%);
    --selection-shadow: hsl(0, 0%, 65%);

    &.prefers-dark-mode {
        --pixel: hsl(0, 0%, 100%);
        --shadow: hsl(0, 0%, 50%);
        --background: hsl(0, 0%, 0%);
        --background-alt: hsl(0, 0%, 20%);
        --text: hsl(0, 0%, 100%);
        --text-invert: hsl(0, 0%, 0%);
        --selection-background: hsla(0, 0%, 80%, 0.99);
        --selection-text: hsl(0, 0%, 0%);
        --selection-shadow: hsl(0, 0%, 65%);
    }
}

@mixin pixelated-border($floating: false, $interactive: false, $state: "normal") {
    $color: var(--pixel);
    $shadow: var(--shadow);

    $border: #{0} -$pixel $color, $pixel #{0} $color, #{0} $pixel $color, -$pixel #{0} $color;
    @if ($floating and not $interactive) or ($floating and $interactive and $state == "normal") {
        $border: $border + "," + ( 0 (2 * $pixel) $shadow, $pixel $pixel $shadow, -$pixel $pixel $shadow);
    }

    box-shadow: #{$border};
}

@mixin container($floating: false) {
    @include pixelated-border();

    padding: $pixel;
    background-color: var(--background);
}

@mixin interactive($floating: false) {
    @include pixelated-border($floating, true, "normal");

    transition: transform ease-in-out 0.1s, box-shadow ease-in-out 0.1s, background ease-in-out 0.3s, color ease-in-out 0.3s, text-shadow ease-in-out 0.3s;
    min-width: .3in;

    &:hover, &:focus {
        background-color: hsl(0, 0%, 50%);
        color: hsl(0, 0%, 100%);
        outline: none;
        text-shadow: 0 0 2px hsl(0, 0%, 30%);
    }

    &:active {
        @include pixelated-border($floating, true, "active");
        transform: translate(0, 2px);
    }

    &[maintainsize] {
        text-overflow: ellipsis;
        overflow: hidden;
        white-space: nowrap;
    }

    &[align="left"] {
        text-align: left;
    }

    &[align="center"] {
        text-align: center;
    }

    &[align="right"] {
        text-align: right;
    }
}

html {
    padding: .5em;
    font-family: serif;
    font-size: .2in;
    line-height: 1.5;
}

body {
    color: var(--text);
    background-color: var(--background-alt);
    overflow-x: hidden;
}

header {
    margin-bottom: 20px;
    display: flex;
    filter: blur(0);
    transition: filter 0.3s;

    &.modalOpen {
        transform: translateZ(0);
        filter: blur(1px);
    }
}

nav {
    @include container();

    display: flex;
    flex-basis: 8in;
    flex-grow: 0;
    justify-content: space-evenly;
    padding-bottom: 2 * $pixel;

    & > a {
        flex: none;
        padding: $pixel;
        font-family: sans-serif;
    }
}

main {
    padding: 1px (2 * $pixel) (2 * $pixel);
    background-color: var(--background);
    box-shadow: 0 -6px var(--pixel), 6px 0 var(--pixel), 0 6px var(--pixel), -6px 0 var(--pixel), 0 0 0 3px var(--pixel), 0 10px var(--shadow), 6px 4px var(--shadow), -6px 4px var(--shadow), 0 4px 0 3px var(--shadow);
    filter: blur(0);
    transition: filter 0.3s;

    &.modalOpen {
        transform: translateZ(0);
        filter: blur(1px);
    }
}

header, main {
    transition: filter 0.3s;
}

dialog {
    display: block;
    background: none;
    box-sizing: border-box;
    border: none;
    position: fixed;
    top: 0;
    left: auto;
    right: -500px;
    max-width: 500px;
    width: 100vw;
    transition: right .5s;
    overflow-y: auto;
    padding: 8px 0;

    &[open] {
        right: 0;
    }

    &::backdrop {
        display: none;
    }

    > section {
        @include container();

        margin-left: $pixel;
    }
}

#backdrop {
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    background-color: hsla(0, 0%, 0%, 0.1);
    opacity: 0;
    pointer-events: none;
    transition: opacity 500ms, pointer-events 1ms 500ms;

    &.visible {
        opacity: 1;
        pointer-events: auto;
    }
}

h1, h2, h3, h4, h5, h6 {
    font-family: sans-serif;
}

h1 {
    box-shadow: -(1.5 * $pixel) 0 var(--pixel);
    margin-block: 10px 1rem;
    margin-inline: 8px 0;
}

h1 > a, h1 > a:active {
    box-shadow: 0 (1.5 * $pixel) var(--pixel);
}

h2 {
    box-shadow: -$pixel 0 var(--pixel);
    margin-inline-start: $pixel;
}

h2 > a, h2 > a:active {
    box-shadow: 0 $pixel var(--pixel);
}

h3 {
    box-shadow: -(0.5 * $pixel) 0 var(--pixel);
    margin-inline-start: (0.5 * $pixel);
}

h3 > a, h3 > a:active {
    box-shadow: 0 (0.5 * $pixel) var(--pixel);
}

h4 > a, h4 > a:active, h5 > a, h5 > a:active, h6 > a, h6 > a:active {
    box-shadow: 0 (0.5 * $pixel) var(--pixel);
}

hr {
    margin-inline: 2px .5rem;
    border: 1px solid;
}

hr.h1 {
    border: 3px solid;
    box-shadow: -4px -1px 0 -1px var(--pixel), 4px -1px 0 -1px var(--pixel), 0 4px var(--shadow), -3px 2px var(--shadow), 3px 2px var(--shadow);
    margin-inline-start: 8px;
}

hr.h2 {
    border: 2px solid;
    box-shadow: 0 4px var(--shadow);
    margin-inline-start: 4px;
}


hr.h3 {
    border: 1px solid;
    box-shadow: 0 2px var(--shadow);
    margin-inline-start: 2px;
}

ul {
    list-style: none;
}

ul > li {
    position: relative;
}

ul > li::before {
    content: "";
    position: absolute;
    left: -16px;
    top: 50%;
    margin-block-start: -4px;
    width: 8px;
    height: 8px;
    background: var(--pixel);
}

ol {
    list-style: none;
    counter-reset: ol-counter;
}

ol > li {
    counter-increment: ol-counter;
    position: relative;
}

ol > li:before {
    content: counter(ol-counter) ".";
    position: absolute;
    font-family: monospace;
    right: 100%;
}

blockquote {
    margin-block: .5rem;
    margin-inline: 0;
    padding-block: .5rem;
    padding-inline: 2rem;
    box-shadow: -$pixel 0 var(--pixel);
    background-color: var(--background-alt);
}

a {
    @include interactive();
    box-shadow: 0 $pixel var(--pixel);
    color: var(--text);

    text-decoration: none;
    display: inline-block;
    padding-block: 0;
    padding-inline: .25rem;

    &:active {
        transform: translate(0, 1px);
        box-shadow: 0 $pixel var(--pixel);
    }
}

button {
    @include interactive(true);

    appearance: none;
    border: none;
}

input, textarea {
    appearance: none;
    border: none;
    vertical-align: middle;
    font-family: monospace;
}

input[type=text] {
    @include interactive();
}

input[type=range] {
    appearance: none;
    outline: none;
    background: none;

    min-height: .3in;
    min-width: .3in;
}

input[type=range]::-webkit-slider-runnable-track {
    @include container();

    width: 100%;
    height: $pixel;
}

input[type=range]::-webkit-slider-thumb {
    @include interactive(true);
    appearance: none;

    background-color: var(--background);
    height: .3in;
    width: $pixel;
    margin-top: -.15in;
}

input[type=range]:hover::-webkit-slider-thumb, input[type=range]:focus::-webkit-slider-thumb {
    background: hsl(0, 0%, 50%);
}

select {
    appearance: none;
    border: none;
    border-radius: 0;
}

textarea {
    appearance: none;
    border: none;
    display: block;

    resize: vertical;
    min-height: 0.3in;
}

textarea::placeholder {
    color: var(--text);
    opacity: 0.3;
    font-style: italic;
    transition: color ease-in-out 0.3s, opacity ease-in-out 0.3s;
}

textarea:hover::placeholder, textarea:focus::placeholder {
    color: var(--text-invert);
    opacity: 1;
}

::selection {
    background-color: var(--selection-background);
    color: var(--selection-text);
    text-shadow: 0 0 1px var(--selection-shadow);
}